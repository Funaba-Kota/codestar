AWSTemplateFormatVersion: 2010-09-09
Description: A Node.js web service deployed to AWS Lambda.
Parameters:
  CodeS3Bucket:
    NoEcho: true
    Type: String
    Default: ''
  ProjectId:
    Type: String
    Description: Project ID.
    AllowedPattern: '^[a-z]([a-z0-9-])+$'
    ConstraintDescription: >-
      Project IDs must be between 2 and 15 characters, begin with a letter, and
      only contain lowercase letters, numbers, and hyphens (-).
    MinLength: 2
    MaxLength: 15
  RepositoryName:
    Type: String
    Description: AWS CodeCommit repository name.
    MinLength: 1
    MaxLength: 100
  CodeS3Key:
    NoEcho: true
    Type: String
    Default: ''
Metadata:
  IsWebsite: false
  ProjectTemplateId: webservice-nodeexpress-lambda
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Parameters:
          - ProjectId
        Label:
          default: Application
  WebsiteS3Bucket: !Ref WebsiteS3Bucket
Resources:
  CloudFormationTrustRole:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::Role'
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      Path: /
      RoleName: !Join 
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - CloudFormation
      Policies:
        - PolicyName: CodeStarWorkerCloudFormationRolePolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
                Effect: Allow
              - Action:
                  - 'apigateway:DELETE'
                  - 'apigateway:GET'
                  - 'apigateway:PATCH'
                  - 'apigateway:POST'
                  - 'apigateway:PUT'
                  - 'codedeploy:CreateApplication'
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:CreateDeploymentConfig'
                  - 'codedeploy:CreateDeploymentGroup'
                  - 'codedeploy:DeleteApplication'
                  - 'codedeploy:DeleteDeployment'
                  - 'codedeploy:DeleteDeploymentConfig'
                  - 'codedeploy:DeleteDeploymentGroup'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:GetDeploymentGroup'
                  - 'codedeploy:RegisterApplicationRevision'
                  - 'codedeploy:TagResource'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:ListTagsForResource'
                  - 'codestar:SyncResources'
                  - 'config:DeleteConfigRule'
                  - 'config:DescribeConfigRules'
                  - 'config:ListTagsForResource'
                  - 'config:PutConfigRule'
                  - 'config:TagResource'
                  - 'config:UntagResource'
                  - 'dynamodb:CreateTable'
                  - 'dynamodb:DeleteTable'
                  - 'dynamodb:DescribeContinuousBackups'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:DescribeTimeToLive'
                  - 'dynamodb:ListTagsOfResource'
                  - 'dynamodb:TagResource'
                  - 'dynamodb:UntagResource'
                  - 'dynamodb:UpdateContinuousBackups'
                  - 'dynamodb:UpdateTable'
                  - 'dynamodb:UpdateTimeToLive'
                  - 'ec2:AssociateIamInstanceProfile'
                  - 'ec2:AttachVolume'
                  - 'ec2:CreateSecurityGroup'
                  - 'ec2:createTags'
                  - 'ec2:DescribeIamInstanceProfileAssociations'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DetachVolume'
                  - 'ec2:DisassociateIamInstanceProfile'
                  - 'ec2:ModifyInstanceAttribute'
                  - 'ec2:ModifyInstanceCreditSpecification'
                  - 'ec2:ModifyInstancePlacement'
                  - 'ec2:MonitorInstances'
                  - 'ec2:ReplaceIamInstanceProfileAssociation'
                  - 'ec2:RunInstances'
                  - 'ec2:StartInstances'
                  - 'ec2:StopInstances'
                  - 'ec2:TerminateInstances'
                  - 'events:DeleteRule'
                  - 'events:DescribeRule'
                  - 'events:ListTagsForResource'
                  - 'events:PutRule'
                  - 'events:PutTargets'
                  - 'events:RemoveTargets'
                  - 'events:TagResource'
                  - 'events:UntagResource'
                  - 'kinesis:AddTagsToStream'
                  - 'kinesis:CreateStream'
                  - 'kinesis:DecreaseStreamRetentionPeriod'
                  - 'kinesis:DeleteStream'
                  - 'kinesis:DescribeStream'
                  - 'kinesis:IncreaseStreamRetentionPeriod'
                  - 'kinesis:RemoveTagsFromStream'
                  - 'kinesis:StartStreamEncryption'
                  - 'kinesis:StopStreamEncryption'
                  - 'kinesis:UpdateShardCount'
                  - 'lambda:CreateAlias'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteAlias'
                  - 'lambda:DeleteFunction'
                  - 'lambda:DeleteFunctionConcurrency'
                  - 'lambda:GetFunction'
                  - 'lambda:GetFunctionConfiguration'
                  - 'lambda:ListTags'
                  - 'lambda:ListVersionsByFunction'
                  - 'lambda:PublishVersion'
                  - 'lambda:PutFunctionConcurrency'
                  - 'lambda:TagResource'
                  - 'lambda:UntagResource'
                  - 'lambda:UpdateAlias'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:DeleteBucketWebsite'
                  - 's3:PutAccelerateConfiguration'
                  - 's3:PutAnalyticsConfiguration'
                  - 's3:PutBucketAcl'
                  - 's3:PutBucketCORS'
                  - 's3:PutBucketLogging'
                  - 's3:PutBucketNotification'
                  - 's3:PutBucketPublicAccessBlock'
                  - 's3:PutBucketVersioning'
                  - 's3:PutBucketWebsite'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:PutInventoryConfiguration'
                  - 's3:PutLifecycleConfiguration'
                  - 's3:PutMetricsConfiguration'
                  - 's3:PutReplicationConfiguration'
                  - 'sns:CreateTopic'
                  - 'sns:DeleteTopic'
                  - 'sns:GetTopicAttributes'
                  - 'sns:ListSubscriptionsByTopic'
                  - 'sns:ListTopics'
                  - 'sns:SetSubscriptionAttributes'
                  - 'sns:Subscribe'
                  - 'sns:Unsubscribe'
                  - 'sqs:CreateQueue'
                  - 'sqs:DeleteQueue'
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:GetQueueUrl'
                  - 'sqs:ListQueueTags'
                  - 'sqs:TagQueue'
                  - 'sqs:UntagQueue'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 'lambda:GetAlias'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:awscodestar-${ProjectId}-lambda-*
                Effect: Allow
              - Action:
                  - 'iam:PassRole'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CodeStar-${ProjectId}-Execution
                Effect: Allow
              - Condition:
                  StringEquals:
                    'iam:PassedToService': codedeploy.amazonaws.com
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt 
                    - CodeDeployTrustRole
                    - Arn
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateChangeSet'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
                  - !Sub >-
                    arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/CodeStar
                Effect: Allow
              - Action:
                  - 'iam:CreateServiceLinkedRole'
                  - 'iam:GetRole'
                  - 'iam:DeleteRole'
                  - 'iam:DeleteUser'
                Resource: '*'
                Effect: Allow
              - Condition:
                  StringEquals:
                    'iam:PermissionsBoundary': !Sub >-
                      arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary
                Action:
                  - 'iam:AttachRolePolicy'
                  - 'iam:AttachUserPolicy'
                  - 'iam:CreateRole'
                  - 'iam:CreateUser'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:DeleteUserPolicy'
                  - 'iam:DetachUserPolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:PutUserPermissionsBoundary'
                  - 'iam:PutRolePermissionsBoundary'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'kms:CreateKey'
                  - 'kms:CreateAlias'
                  - 'kms:DeleteAlias'
                  - 'kms:DisableKey'
                  - 'kms:EnableKey'
                  - 'kms:UpdateAlias'
                  - 'kms:TagResource'
                  - 'kms:UntagResource'
                Resource: '*'
                Effect: Allow
              - Condition:
                  StringEquals:
                    'ssm:ResourceTag/awscodestar:projectArn': !Sub >-
                      arn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}
                Action:
                  - 'ssm:GetParameter*'
                Resource: '*'
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
  S3Bucket:
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Join 
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ProjectId
          - pipe
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Value: !Join 
            - '-'
            - - !Ref ProjectId
              - S3Bucket
          Key: Name
  ToolChainRole:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::Role'
    Description: Creating toolchain role in IAM for Amazon EC2 instances
    Properties:
      Path: /
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeBuildAdminAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeCommitFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeDeployFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodePipeline_FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeStarFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSLambda_FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchEventsFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchLogsFullAccess'
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-ToolChain'
      Policies:
        - PolicyName: ToolChainWorkerPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 'kms:GenerateDataKey*'
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                  - 'iam:PassRole'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'ec2:DescribeVpnConnections'
                Resource: '*'
                Effect: Deny
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - codepipeline.amazonaws.com
                - codestar.amazonaws.com
                - elasticbeanstalk.amazonaws.com
                - events.amazonaws.com
                - lambda.amazonaws.com
      PermissionsBoundary: !Ref PermissionsBoundaryPolicy
  ProjectPipeline:
    DependsOn:
      - ToolChainRole
      - S3Bucket
      - CodeBuildProject
      - CloudFormationTrustRole
    Type: 'AWS::CodePipeline::Pipeline'
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      Stages:
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Source
                Version: 1
                Provider: CodeCommit
              Configuration:
                PollForSourceChanges: false
                RepositoryName: !Ref RepositoryName
                BranchName: master
              InputArtifacts: []
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              RunOrder: 1
              Name: ApplicationSource
          Name: Source
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ProjectId
              InputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifact'
              RunOrder: 1
              Name: PackageExport
          Name: Build
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: !Sub '${ProjectId}-BuildArtifact::template-export.yml'
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub >-
                  {"ProjectId":"${ProjectId}",
                  "CodeDeployRole":"${CodeDeployTrustRole.Arn}"}
                TemplateConfiguration: !Sub '${ProjectId}-BuildArtifact::template-configuration.json'
                ChangeSetName: pipeline-changeset
                RoleArn: !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifact'
              OutputArtifacts: []
              RunOrder: 1
              Name: GenerateChangeSet
            - ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
              InputArtifacts: []
              OutputArtifacts: []
              RunOrder: 2
              Name: ExecuteChangeSet
          Name: Deploy
      RoleArn: !GetAtt 
        - ToolChainRole
        - Arn
      Name: !Sub '${ProjectId}-Pipeline'
  EnvironmentEC216fc7198ea10422698051b35f075e54f:
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      Repositories:
        - PathComponent: /funaba0601-back
          RepositoryUrl: >-
            https://git-codecommit.ap-northeast-1.amazonaws.com/v1/repos/funaba0601-back
      OwnerArn: 'arn:aws:iam::941920968752:user/kota.funaba'
      Description: AWS CodeStar ?????????
      AutomaticStopTimeMinutes: '30'
      ImageId: amazonlinux-2-x86_64
      SubnetId: subnet-091bc43f64da39694
      InstanceType: t2.micro
      Name: funaba0601dev
  S3ArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Condition:
              Bool:
                'aws:SecureTransport': false
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - ToolChainRole
                  - Arn
                - !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
            Sid: WhitelistedGet
          - Action:
              - 's3:PutObject'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - ToolChainRole
                  - Arn
            Sid: WhitelistedPut
        Id: SSEAndSSLPolicy
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
      - ToolChainRole
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: codepipeline
        Packaging: zip
      Description: !Join 
        - ''
        - - 'AWS CodeStar created CodeBuild Project for '
          - !Ref ProjectId
      ServiceRole: !Ref ToolChainRole
      Environment:
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Value: !Ref S3Bucket
            Name: S3_BUCKET
          - Value: !If 
              - CreateWebSiteS3Bucket
              - !Join 
                - ''
                - - 'https://s3-ap-northeast-1.amazonaws.com/'
                  - !Ref WebsiteS3Bucket
              - NoVal
            Name: WEBSITE_S3_PREFIX
          - Value: !If 
              - CreateWebSiteS3Bucket
              - !Ref WebsiteS3Bucket
              - NoVal
            Name: WEBSITE_S3_BUCKET
          - Value: !Ref ProjectId
            Name: PROJECT_ID
          - Value: !Ref 'AWS::AccountId'
            Name: ACCOUNT_ID
          - Value: !Ref 'AWS::Partition'
            Name: PARTITION
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        ComputeType: small
      Source:
        Type: codepipeline
      Name: !Ref ProjectId
  CodeCommitRepo:
    Type: 'AWS::CodeCommit::Repository'
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryName: !Ref RepositoryName
      Code:
        S3:
          Bucket: !Ref CodeS3Bucket
          Key: !Ref CodeS3Key
        BranchName: master
      RepositoryDescription: !Join 
        - ''
        - - !Ref ProjectId
          - ' project repository'
  CodeDeployTrustRole:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::Role'
    Description: The service role to be created in IAM for AWS CodeDeploy
    Properties:
      Path: /
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CodeDeploy'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
  PermissionsBoundaryPolicy:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::ManagedPolicy'
    Description: >-
      Creating an IAM managed policy for defining the permissions boundary for
      an AWS CodeStar project
    Properties:
      ManagedPolicyName: !Sub 'CodeStar_${ProjectId}_PermissionsBoundary'
      Description: >-
        IAM policy to define the permissions boundary for IAM entities created
        in an AWS CodeStar project
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - '*'
            Resource:
              - !Sub >-
                arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*
              - !Sub >-
                arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}
              - !Sub >-
                arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}
              - !Sub >-
                arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
              - !If 
                - CreateWebSiteS3Bucket
                - !Sub 'arn:${AWS::Partition}:s3:::${WebsiteS3Bucket}'
                - !Ref 'AWS::NoValue'
              - !If 
                - CreateWebSiteS3Bucket
                - !Sub 'arn:${AWS::Partition}:s3:::${WebsiteS3Bucket}/*'
                - !Ref 'AWS::NoValue'
            Effect: Allow
            Sid: 1
          - Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource:
              - !Sub >-
                arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
            Effect: Allow
            Sid: 2
          - Action:
              - 'iam:PassRole'
            Resource:
              - !GetAtt 
                - CloudFormationTrustRole
                - Arn
            Effect: Allow
            Sid: 3
          - Action:
              - 'cloudtrail:CreateTrail'
              - 'cloudtrail:StartLogging'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:DescribeLogGroups'
              - 'logs:PutLogEvents'
              - 'sns:Get*'
              - 'sns:List*'
              - 'sns:Publish'
              - 'sns:Subscribe'
              - 'xray:Put*'
            Resource: '*'
            Effect: Allow
            Sid: 4
          - Condition:
              'ForAnyValue:StringLike':
                'cloudformation:ImportResourceTypes':
                  - '*'
            Action:
              - 'cloudformation:*'
            Resource:
              - !Sub >-
                arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*
            Effect: Deny
            Sid: 5
  SourceEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt 
            - CodeCommitRepo
            - Arn
        detail:
          referenceType:
            - branch
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
        source:
          - aws.codecommit
      Description: >-
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      State: ENABLED
      Targets:
        - Id: ProjectPipelineTarget
          Arn: !Sub >-
            arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
          RoleArn: !GetAtt 
            - ToolChainRole
            - Arn
      Name: !Join 
        - '-'
        - - awscodestar
          - !Ref ProjectId
          - SourceEvent
  WebsiteS3Bucket:
    Condition: CreateWebSiteS3Bucket
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Description: Creating Amazon S3 bucket for Website static artifacts
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
        IgnorePublicAcls: false
      BucketName: !Sub 'aws-codestar-${AWS::Region}-${AWS::AccountId}-${ProjectId}-app'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Value: !Sub '${ProjectId}-WebsiteS3Bucket'
          Key: Name
Transform:
  - 'AWS::CodeStar'
Conditions:
  CreateWebSiteS3Bucket: !Equals 
    - false
    - true
  CreateCodeBuildResources: !Equals 
    - true
    - true
