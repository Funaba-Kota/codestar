<テンプレートの設定>

AWSTemplateFormatVersion: 2010-09-09


--内容--
AWSTemplateFormatVersionは、CloudFormationテンプレートのバージョンを指定します。このバージョンはテンプレートの構文と機能を定義します。


＜パラメータの定義＞

Parameters:
  CodeS3Bucket:
    NoEcho: true
    Type: String
    Default: ''
  ProjectId:
    Type: String
    Description: Project ID.
    AllowedPattern: '^[a-z]([a-z0-9-])+$'
    ConstraintDescription: >-
      Project IDs must be between 2 and 15 characters, begin with a letter, and
      only contain lowercase letters, numbers, and hyphens (-).
    MinLength: 2
    MaxLength: 15
  RepositoryName:
    Type: String
    Description: AWS CodeCommit repository name.
    MinLength: 1
    MaxLength: 100
  CodeS3Key:
    NoEcho: true
    Type: String
    Default: ''

--内容--
Parametersセクションでは、テンプレートで使用されるパラメータを定義します。これにより、ユーザーはスタック作成時にカスタム値を指定できます。
CodeS3Bucket:バケット名を指定
ProjectId:プロジェクトの識別子
RepositoryName:CodeCommit リポジトリの名前
CodeS3Key:S3 オブジェクトのキー

Metadata:
  IsWebsite: false
  ProjectTemplateId: webservice-nodeexpress-lambda
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Parameters:
          - ProjectId
        Label:
          default: Application
  WebsiteS3Bucket: !Ref WebsiteS3Bucket

--内容--

IsWebsite：
ProjectTemplateId:
WebsiteS3Bucket：


＜リソースの定義＞

①CloudFormationTrustRole

CloudFormationTrustRole:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::Role'
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      Path: /
      RoleName: !Join 
        - '-'
        - - CodeStarWorker
          - !Ref ProjectId
          - CloudFormation
      Policies:
        - PolicyName: CodeStarWorkerCloudFormationRolePolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                Resource:
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
                  - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
                Effect: Allow
              - Action:
                  - 'apigateway:DELETE'
                  - 'apigateway:GET'
                  - 'apigateway:PATCH'
                  - 'apigateway:POST'
                  - 'apigateway:PUT'
                  - 'codedeploy:CreateApplication'
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:CreateDeploymentConfig'
                  - 'codedeploy:CreateDeploymentGroup'
                  - 'codedeploy:DeleteApplication'
                  - 'codedeploy:DeleteDeployment'
                  - 'codedeploy:DeleteDeploymentConfig'
                  - 'codedeploy:DeleteDeploymentGroup'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:GetDeploymentGroup'
                  - 'codedeploy:RegisterApplicationRevision'
                  - 'codedeploy:TagResource'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:ListTagsForResource'
                  - 'codestar:SyncResources'
                  - 'config:DeleteConfigRule'
                  - 'config:DescribeConfigRules'
                  - 'config:ListTagsForResource'
                  - 'config:PutConfigRule'
                  - 'config:TagResource'
                  - 'config:UntagResource'
                  - 'dynamodb:CreateTable'
                  - 'dynamodb:DeleteTable'
                  - 'dynamodb:DescribeContinuousBackups'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:DescribeTimeToLive'
                  - 'dynamodb:ListTagsOfResource'
                  - 'dynamodb:TagResource'
                  - 'dynamodb:UntagResource'
                  - 'dynamodb:UpdateContinuousBackups'
                  - 'dynamodb:UpdateTable'
                  - 'dynamodb:UpdateTimeToLive'
                  - 'ec2:AssociateIamInstanceProfile'
                  - 'ec2:AttachVolume'
                  - 'ec2:CreateSecurityGroup'
                  - 'ec2:createTags'
                  - 'ec2:DescribeIamInstanceProfileAssociations'
                  - 'ec2:DescribeInstances'
                  - 'ec2:DescribeSecurityGroups'
                  - 'ec2:DescribeSubnets'
                  - 'ec2:DetachVolume'
                  - 'ec2:DisassociateIamInstanceProfile'
                  - 'ec2:ModifyInstanceAttribute'
                  - 'ec2:ModifyInstanceCreditSpecification'
                  - 'ec2:ModifyInstancePlacement'
                  - 'ec2:MonitorInstances'
                  - 'ec2:ReplaceIamInstanceProfileAssociation'
                  - 'ec2:RunInstances'
                  - 'ec2:StartInstances'
                  - 'ec2:StopInstances'
                  - 'ec2:TerminateInstances'
                  - 'events:DeleteRule'
                  - 'events:DescribeRule'
                  - 'events:ListTagsForResource'
                  - 'events:PutRule'
                  - 'events:PutTargets'
                  - 'events:RemoveTargets'
                  - 'events:TagResource'
                  - 'events:UntagResource'
                  - 'kinesis:AddTagsToStream'
                  - 'kinesis:CreateStream'
                  - 'kinesis:DecreaseStreamRetentionPeriod'
                  - 'kinesis:DeleteStream'
                  - 'kinesis:DescribeStream'
                  - 'kinesis:IncreaseStreamRetentionPeriod'
                  - 'kinesis:RemoveTagsFromStream'
                  - 'kinesis:StartStreamEncryption'
                  - 'kinesis:StopStreamEncryption'
                  - 'kinesis:UpdateShardCount'
                  - 'lambda:CreateAlias'
                  - 'lambda:CreateFunction'
                  - 'lambda:DeleteAlias'
                  - 'lambda:DeleteFunction'
                  - 'lambda:DeleteFunctionConcurrency'
                  - 'lambda:GetFunction'
                  - 'lambda:GetFunctionConfiguration'
                  - 'lambda:ListTags'
                  - 'lambda:ListVersionsByFunction'
                  - 'lambda:PublishVersion'
                  - 'lambda:PutFunctionConcurrency'
                  - 'lambda:TagResource'
                  - 'lambda:UntagResource'
                  - 'lambda:UpdateAlias'
                  - 'lambda:UpdateFunctionCode'
                  - 'lambda:UpdateFunctionConfiguration'
                  - 's3:CreateBucket'
                  - 's3:DeleteBucket'
                  - 's3:DeleteBucketWebsite'
                  - 's3:PutAccelerateConfiguration'
                  - 's3:PutAnalyticsConfiguration'
                  - 's3:PutBucketAcl'
                  - 's3:PutBucketCORS'
                  - 's3:PutBucketLogging'
                  - 's3:PutBucketNotification'
                  - 's3:PutBucketPublicAccessBlock'
                  - 's3:PutBucketVersioning'
                  - 's3:PutBucketWebsite'
                  - 's3:PutEncryptionConfiguration'
                  - 's3:PutInventoryConfiguration'
                  - 's3:PutLifecycleConfiguration'
                  - 's3:PutMetricsConfiguration'
                  - 's3:PutReplicationConfiguration'
                  - 'sns:CreateTopic'
                  - 'sns:DeleteTopic'
                  - 'sns:GetTopicAttributes'
                  - 'sns:ListSubscriptionsByTopic'
                  - 'sns:ListTopics'
                  - 'sns:SetSubscriptionAttributes'
                  - 'sns:Subscribe'
                  - 'sns:Unsubscribe'
                  - 'sqs:CreateQueue'
                  - 'sqs:DeleteQueue'
                  - 'sqs:GetQueueAttributes'
                  - 'sqs:GetQueueUrl'
                  - 'sqs:ListQueueTags'
                  - 'sqs:TagQueue'
                  - 'sqs:UntagQueue'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:AddPermission'
                  - 'lambda:RemovePermission'
                  - 'lambda:GetAlias'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:awscodestar-${ProjectId}-lambda-*
                Effect: Allow
              - Action:
                  - 'iam:PassRole'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:iam::${AWS::AccountId}:role/CodeStar-${ProjectId}-Execution
                Effect: Allow
              - Condition:
                  StringEquals:
                    'iam:PassedToService': codedeploy.amazonaws.com
                Action:
                  - 'iam:PassRole'
                Resource:
                  - !GetAtt 
                    - CodeDeployTrustRole
                    - Arn
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateChangeSet'
                Resource:
                  - !Sub >-
                    arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31
                  - !Sub >-
                    arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/CodeStar
                Effect: Allow
              - Action:
                  - 'iam:CreateServiceLinkedRole'
                  - 'iam:GetRole'
                  - 'iam:DeleteRole'
                  - 'iam:DeleteUser'
                Resource: '*'
                Effect: Allow
              - Condition:
                  StringEquals:
                    'iam:PermissionsBoundary': !Sub >-
                      arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary
                Action:
                  - 'iam:AttachRolePolicy'
                  - 'iam:AttachUserPolicy'
                  - 'iam:CreateRole'
                  - 'iam:CreateUser'
                  - 'iam:DeleteRolePolicy'
                  - 'iam:DeleteUserPolicy'
                  - 'iam:DetachUserPolicy'
                  - 'iam:DetachRolePolicy'
                  - 'iam:PutUserPermissionsBoundary'
                  - 'iam:PutRolePermissionsBoundary'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'kms:CreateKey'
                  - 'kms:CreateAlias'
                  - 'kms:DeleteAlias'
                  - 'kms:DisableKey'
                  - 'kms:EnableKey'
                  - 'kms:UpdateAlias'
                  - 'kms:TagResource'
                  - 'kms:UntagResource'
                Resource: '*'
                Effect: Allow
              - Condition:
                  StringEquals:
                    'ssm:ResourceTag/awscodestar:projectArn': !Sub >-
                      arn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}
                Action:
                  - 'ssm:GetParameter*'
                Resource: '*'
                Effect: Allow
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com

--内容--
〇クラウドフォーメイションが使うためのロール

DeletionPolicy:スタック削除時にリソースは残す
Type:IAMロールのリソース
Description:メモ
Properties:
  Path：リソースのパスはルートに設定
  RoleName：CodeStarWorker-"パラメータ設定値(ProjectTd)"-CloudFormationで設定
  Policies：
    PolicyName：CodeStarWorkerCloudFormationRolePolicyで設定
    PolicyDocument：
      Statement：
      　※権限の詳細については省略
        １．S3Bucketに3個の権限を許可
            s3:PutObject　オブジェクトを置く
            s3:GetObject　オブジェクトをとる
            s3:GetObjectVersion　特定のバージョンのオブジェクトを取得
        ２．すべてのリソースに123個の権限を許可
        ３．lambdaに3つの権限を許可
        ４．IAMRoleに1つの権限を許可
        ５．CodeDeploy(ARN指定)のiam:PassedToServiceがcodedeploy.amazonaws.com と等しいものに1つの権限を許可
        ６．cloudformationに1つの権限を許可
        ７．すべてのリソースに4つの権限を許可
        ８．すべてのリソースのiam:PermissionsBoundaryがarn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundaryと等しいものに10この権限「を許可
        ９．すべてのリソースのssm:ResourceTag/awscodestar:projectArnがarn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}と等しいものに10この権限「を許可

    AssumeRolePolicyDocument：cloudformationがこのロールを使うことを許可


②S3Bucket

S3Bucket:
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Join 
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ProjectId
          - pipe
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Value: !Join 
            - '-'
            - - !Ref ProjectId
              - S3Bucket
          Key: Name

--内容--
DeletionPolicy:スタック削除時にリソースは残す
Type:S3のリソース
Description:メモ
Properties
  BucketName：aws-codestar-'AWS::Region'-'AWS::AccountId'-'ProjectId'-pipe という名前設定
  VersioningConfiguration：バケットのバージョン管理設定
  　Status: 有効
  Tags:
    Value: 'ProjectId'-S3Bucket
    Key: Name


③ToolChainRole

ToolChainRole:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::Role'
    Description: Creating toolchain role in IAM for Amazon EC2 instances
    Properties:
      Path: /
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeBuildAdminAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeCommitFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeDeployFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodePipeline_FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeStarFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSLambda_FullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchEventsFullAccess'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchLogsFullAccess'
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-ToolChain'
      Policies:
        - PolicyName: ToolChainWorkerPolicy
          PolicyDocument:
            Statement:
              - Action:
                  - 'kms:GenerateDataKey*'
                  - 'kms:Encrypt'
                  - 'kms:Decrypt'
                  - 'iam:PassRole'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'ec2:DescribeVpnConnections'
                Resource: '*'
                Effect: Deny
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codedeploy.amazonaws.com
                - codepipeline.amazonaws.com
                - codestar.amazonaws.com
                - elasticbeanstalk.amazonaws.com
                - events.amazonaws.com
                - lambda.amazonaws.com
      PermissionsBoundary: !Ref PermissionsBoundaryPolicy


--内容--
〇EC2 インスタンス用の IAM ロール

DeletionPolicy:スタック削除時にリソースは残す
Type:IAMRoleのリソース
Description:メモ
Properties:
  Path:リソースのパスはルート
  ManagedPolicyArns：10個のマネージドポリシーを指定（ARN）
  RoleName：ロール名は'CodeStarWorker-${ProjectId}-ToolChain'
  Policies:ポリシー設定
    PolicyName: ポリシー名は'ToolChainWorkerPolicy'
    PolicyDocument:
      Statement:
        １．すべてのリソースに6個の権限を許可
        ２．すべてのリソースに1個の権限を拒否
  AssumeRolePolicyDocument：下記がこのロールを使用可能
    codebuild
    codedeploy
    codepipeline
    codestar
    elasticbeanstalk
    events
    lambda
  PermissionsBoundary：アクセス許可境界はPermissionsBoundaryPolicyで指定





④ProjectPipeline

ProjectPipeline:
    DependsOn:
      - ToolChainRole
      - S3Bucket
      - CodeBuildProject
      - CloudFormationTrustRole
    Type: 'AWS::CodePipeline::Pipeline'
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      Stages:
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Source
                Version: 1
                Provider: CodeCommit
              Configuration:
                PollForSourceChanges: false
                RepositoryName: !Ref RepositoryName
                BranchName: master
              InputArtifacts: []
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              RunOrder: 1
              Name: ApplicationSource
          Name: Source
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Build
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref ProjectId
              InputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifact'
              RunOrder: 1
              Name: PackageExport
          Name: Build
        - Actions:
            - ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                TemplatePath: !Sub '${ProjectId}-BuildArtifact::template-export.yml'
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub >-
                  {"ProjectId":"${ProjectId}",
                  "CodeDeployRole":"${CodeDeployTrustRole.Arn}"}
                TemplateConfiguration: !Sub '${ProjectId}-BuildArtifact::template-configuration.json'
                ChangeSetName: pipeline-changeset
                RoleArn: !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifact'
              OutputArtifacts: []
              RunOrder: 1
              Name: GenerateChangeSet
            - ActionTypeId:
                Owner: AWS
                Category: Deploy
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure'
              InputArtifacts: []
              OutputArtifacts: []
              RunOrder: 2
              Name: ExecuteChangeSet
          Name: Deploy
      RoleArn: !GetAtt 
        - ToolChainRole
        - Arn
      Name: !Sub '${ProjectId}-Pipeline'

--内容--
〇プロジェクトの構築およびデプロイメントのパイプラインを定義する部分
　CI/CD（継続的インテグレーション／継続的デリバリー）の設定が含まれる

DependsOn：下記を作ってからこのリソースを作成
  ToolChainRole、S3Bucket、CodeBuildProject、CloudFormationTrustRole
Type：CodePipelineのリソース
Description：メモ
Properties：
  ArtifactStore：アーティファクトの保存場所の設定
    Type: S3に保存（ビルドやデプロイのアーティファクトを保存）
    Location: リソースはS3Bucketに明示
  Stages:　ステージはパイプライン内で処理の単位のこと（ソース取得、ビルド、デプロイ）
    Actions：　アクションは各ステージ内で実行される具体的な作業

      ＜＜1.Sourceステージ＞＞
        ActionTypeId：
          Owner： アクションのオーナーはAWS
          Category： アクションのカテゴリは「Source」（ソース取得）
          Version： アクションのバージョンは1に設定
          Provider： ソースコードの提供者はAWS CodeCommit
        Configuration：
          PollForSourceChanges: ソースコードの変更をポーリングして検出しない
          RepositoryName： ソースコードを取得するCodeCommitリポジトリの名前を指定
          BranchName： 取得するブランチ名を指定
        InputArtifacts: []: 入力アーティファクトがなし
        OutputArtifacts：
          Name： 出力アーティファクトの名前
        RunOrder：  ステージ内での実行順序を指定（1番目）
        Name：  このアクションの名前を指定
      Name: ステージの名前（Source）

      ＜＜2.Buildステージ＞＞
        ActionTypeId：
          Owner： アクションのオーナーはAWS
          Category： アクションのカテゴリは「Build」（ビルド）
          Version： アクションのバージョンは1に設定
          Provider： ビルドプロセスの提供者はAWS CodeBuild
        Configuration：
          RepositoryName： CodeBuildプロジェクトの名前を指定
        InputArtifacts：　
          Name： ビルドアクションに渡す入力アーティファクトの名前を指定
        OutputArtifacts：
          Name： ビルドアクションの出力アーティファクトの名前を指定
        RunOrder：  ステージ内での実行順序を指定（1番目）
        Name：  このアクションの名前を指定
      Name: ステージの名前（Build）

      ＜＜3.Deployステージ＞＞
        ActionTypeId：アクション一つ目
          Owner： アクションのオーナーはAWS
          Category： アクションのカテゴリは「Deploy」（デプロイ）
          Version： アクションのバージョンは1に設定
          Provider： デプロイメントプロセスの提供者はAWS CloudFormation 
        Configuration：
          TemplatePath:　CloudFormationテンプレートのパスを指定
          ActionMode: アクションの実行モードを「CHANGE_SET_REPLACE」に指定。変更セットを作成して既存のスタックを置き換える。
          Capabilities: IAMロールの作成を許可
          ParameterOverrides: CloudFormationテンプレートに渡すパラメータのオーバーライドを指定
          TemplateConfiguration:　CloudFormationテンプレートの設定ファイルのパスを指定
          ChangeSetName: 作成する変更セットの名前を指定
          RoleArn: CloudFormationスタックを操作するためのIAMロールのARN
          StackName: 更新するCloudFormationスタックの名前
        InputArtifacts：　
          Name： 入力アーティファクトの名前を指定（ビルドステージの出力を指定）
        OutputArtifacts：出力なし
        RunOrder：  ステージ内での実行順序を指定（1番目）
        Name：  このアクションの名前を指定

        ActionTypeId：アクション二つ目
          Owner： アクションのオーナーはAWS
          Category： アクションのカテゴリは「Deploy」（デプロイ）
          Version： アクションのバージョンは1に設定
          Provider： デプロイメントプロセスの提供者はAWS CloudFormation 
        Configuration：
          ActionMode: アクションの実行モードを「CHANGE_SET_EXECUTE」に指定。変更セットを実行する。
          ChangeSetName：実行する変更セットの名前
          StackName: 更新するCloudFormationスタックの名前
        InputArtifacts：入力なし
        OutputArtifacts：出力なし
        RunOrder：  ステージ内での実行順序を指定（2番目）
        Name：  このアクションの名前を指定
      Name: ステージの名前（Deploy）
      RoleArn：このパイプラインが使用するIAMロールのARN指定
      Name: パイプラインの名前


⑤EnvironmentEC216fc7198ea10422698051b35f075e54f

EnvironmentEC216fc7198ea10422698051b35f075e54f:
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      Repositories:
        - PathComponent: /funaba0601-back
          RepositoryUrl: >-
            https://git-codecommit.ap-northeast-1.amazonaws.com/v1/repos/funaba0601-back
      OwnerArn: 'arn:aws:iam::941920968752:user/kota.funaba'
      Description: AWS CodeStar ?????????
      AutomaticStopTimeMinutes: '30'
      ImageId: amazonlinux-2-x86_64
      SubnetId: subnet-091bc43f64da39694
      InstanceType: t2.micro
      Name: funaba0601dev


--内容--
〇CloudFormation：AWS Cloud9環境を定義

Type：AWS Cloud9のEC2環境を定義
Properties：
  Repositories：
    PathComponent：Cloud9環境内でマウントするリポジトリのパス
    RepositoryUrl：CodeCommitリポジトリのURL　Cloud9環境内でクローンされる
  OwnerArn: Cloud9環境の所有者を指定するIAMユーザーのARN
  Description: メモ
  AutomaticStopTimeMinutes: Cloud9環境が自動的に停止するまでの時間を指定（30分）
  ImageId: EC2インスタンスで使用するAmazon Machine Image (AMI)のID（Amazon Linux 2の64ビットx86版を指定）
  SubnetId: Cloud9環境が配置されるVPCサブネットのID
  InstanceType: EC2インスタンスのタイプ（t2.micro）
  Name: Cloud9環境の名前




⑥S3ArtifactBucketPolicy

S3ArtifactBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Condition:
              Bool:
                'aws:SecureTransport': false
            Action:
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:GetBucketVersioning'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - ToolChainRole
                  - Arn
                - !GetAtt 
                  - CloudFormationTrustRole
                  - Arn
            Sid: WhitelistedGet
          - Action:
              - 's3:PutObject'
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Effect: Allow
            Principal:
              AWS:
                - !GetAtt 
                  - ToolChainRole
                  - Arn
            Sid: WhitelistedPut
        Id: SSEAndSSLPolicy


--内容--
〇S3バケットに設定するポリシーを定義　AWS CodePipelineがアクセスするために設定されたもの

Type: S3バケットポリシーを設定
Description: メモ
Properties:
Bucket: バケットポリシーが適用されるS3バケットの名前
PolicyDocument:
  Version:　ポリシーのバージョン
  Statement:

    ＜＜1.一つ目のポリシー＞＞
    - Condition:
        Bool:　HTTPSではなくHTTP経由でのアクセスを許可
      Action:　以下3つのアクションを許可
        　　　・'s3:GetObject'
        　　　・'s3:GetObjectVersion'
        　　　・'s3:GetBucketVersioning'
      Resource:　S3Bucketのリソースが許可する対象
      Effect: 許可
      Principal:　ポリシーをアタッチするロールを指定
        AWS: 以下2つのARNのロールを指定
         　 ・ToolChainRole
          　・CloudFormationTrustRole
      Sid: ステートメントのID

    ＜＜2.二つめのポリシー＞＞  
    - Action:以下のアクションを許可
        　　・'s3:PutObject'
      Resource:　S3Bucketのリソースが許可する対象
      Effect: 許可
      Principal:
        AWS:　以下のARNのロールを指定
          　・ToolChainRole
      Sid: ステートメントのID
  Id: ポリシーのID





⑦CodeBuildProject

CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
      - ToolChainRole
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Artifacts:
        Type: codepipeline
        Packaging: zip
      Description: !Join 
        - ''
        - - 'AWS CodeStar created CodeBuild Project for '
          - !Ref ProjectId
      ServiceRole: !Ref ToolChainRole
      Environment:
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Value: !Ref S3Bucket
            Name: S3_BUCKET
          - Value: !If 
              - CreateWebSiteS3Bucket
              - !Join 
                - ''
                - - 'https://s3-ap-northeast-1.amazonaws.com/'
                  - !Ref WebsiteS3Bucket
              - NoVal
            Name: WEBSITE_S3_PREFIX
          - Value: !If 
              - CreateWebSiteS3Bucket
              - !Ref WebsiteS3Bucket
              - NoVal
            Name: WEBSITE_S3_BUCKET
          - Value: !Ref ProjectId
            Name: PROJECT_ID
          - Value: !Ref 'AWS::AccountId'
            Name: ACCOUNT_ID
          - Value: !Ref 'AWS::Partition'
            Name: PARTITION
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:3.0'
        ComputeType: small
      Source:
        Type: codepipeline
      Name: !Ref ProjectId
      

--内容--

⑧CodeCommitRepo

CodeCommitRepo:
    Type: 'AWS::CodeCommit::Repository'
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      RepositoryName: !Ref RepositoryName
      Code:
        S3:
          Bucket: !Ref CodeS3Bucket
          Key: !Ref CodeS3Key
        BranchName: master
      RepositoryDescription: !Join 
        - ''
        - - !Ref ProjectId
          - ' project repository'

                

--内容--


⑨CodeDeployTrustRole

CodeDeployTrustRole:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::Role'
    Description: The service role to be created in IAM for AWS CodeDeploy
    Properties:
      Path: /
      ManagedPolicyArns:
        - !Sub >-
          arn:${AWS::Partition}:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CodeDeploy'
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com

                
                

--内容--

⑩PermissionsBoundaryPolicy

PermissionsBoundaryPolicy:
    DeletionPolicy: Retain
    Type: 'AWS::IAM::ManagedPolicy'
    Description: >-
      Creating an IAM managed policy for defining the permissions boundary for
      an AWS CodeStar project
    Properties:
      ManagedPolicyName: !Sub 'CodeStar_${ProjectId}_PermissionsBoundary'
      Description: >-
        IAM policy to define the permissions boundary for IAM entities created
        in an AWS CodeStar project
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - '*'
            Resource:
              - !Sub >-
                arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*
              - !Sub >-
                arn:${AWS::Partition}:codebuild:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}
              - !Sub >-
                arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}
              - !Sub >-
                arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
              - !If 
                - CreateWebSiteS3Bucket
                - !Sub 'arn:${AWS::Partition}:s3:::${WebsiteS3Bucket}'
                - !Ref 'AWS::NoValue'
              - !If 
                - CreateWebSiteS3Bucket
                - !Sub 'arn:${AWS::Partition}:s3:::${WebsiteS3Bucket}/*'
                - !Ref 'AWS::NoValue'
            Effect: Allow
            Sid: 1
          - Action:
              - 'kms:Encrypt'
              - 'kms:Decrypt'
              - 'kms:GenerateDataKey'
            Resource:
              - !Sub >-
                arn:${AWS::Partition}:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3
            Effect: Allow
            Sid: 2
          - Action:
              - 'iam:PassRole'
            Resource:
              - !GetAtt 
                - CloudFormationTrustRole
                - Arn
            Effect: Allow
            Sid: 3
          - Action:
              - 'cloudtrail:CreateTrail'
              - 'cloudtrail:StartLogging'
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:DescribeLogGroups'
              - 'logs:PutLogEvents'
              - 'sns:Get*'
              - 'sns:List*'
              - 'sns:Publish'
              - 'sns:Subscribe'
              - 'xray:Put*'
            Resource: '*'
            Effect: Allow
            Sid: 4
          - Condition:
              'ForAnyValue:StringLike':
                'cloudformation:ImportResourceTypes':
                  - '*'
            Action:
              - 'cloudformation:*'
            Resource:
              - !Sub >-
                arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/awscodestar-${ProjectId}-infrastructure/*
            Effect: Deny
            Sid: 5

                   

--内容--

⑪SourceEvent

SourceEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt 
            - CodeCommitRepo
            - Arn
        detail:
          referenceType:
            - branch
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
        source:
          - aws.codecommit
      Description: >-
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      State: ENABLED
      Targets:
        - Id: ProjectPipelineTarget
          Arn: !Sub >-
            arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
          RoleArn: !GetAtt 
            - ToolChainRole
            - Arn
      Name: !Join 
        - '-'
        - - awscodestar
          - !Ref ProjectId
          - SourceEvent


                     

--内容--

WebsiteS3Bucket:
    Condition: CreateWebSiteS3Bucket
    DeletionPolicy: Retain
    Type: 'AWS::S3::Bucket'
    Description: Creating Amazon S3 bucket for Website static artifacts
    Properties:
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: false
        BlockPublicPolicy: false
        BlockPublicAcls: false
        IgnorePublicAcls: false
      BucketName: !Sub 'aws-codestar-${AWS::Region}-${AWS::AccountId}-${ProjectId}-app'
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Value: !Sub '${ProjectId}-WebsiteS3Bucket'
          Key: Name
            

--内容--


<テンプレートの設定2>

Transform:
  - 'AWS::CodeStar'


--内容--
AWS CodeStarのトランスフォームを使用していることを示します。
CodeStarプロジェクトに統合するための特別な設定を行います。



Conditions:
  CreateWebSiteS3Bucket: !Equals 
    - false
    - true
  CreateCodeBuildResources: !Equals 
    - true
    - true





-------------------
CloudFormationTrustRole										このCloudformationにつけるロール設定
	DeletionPolicy							いいえ	"スタック削除時にリソースを残すか設定
デフォルトは削除"	Retain：残す
	Type							はい	リソースのタイプを設定	IAM Role
	Description							いいえ	メモ	
	Properties							はい	詳細設定	
		Path						いいえ	"ロールへのパス
デフォルトは「/」"	「/」ルート
		RoleName						いいえ	"ロール名
デフォルトは自動生成のID"	
		Policies						いいえ	このロールのポリシーを設定	詳細は略
			PolicyName					はい	ポリシー名	
			PolicyDocument					はい	ポリシーの詳細	
				Statement				はい		
					Action			はい	なんの操作をか	
					Resource			はい	どのリソースに対してか(ARN指定)	
					Effect			はい	許可・拒否の設定	
					Condition			いいえ	条件設定（満たしたときにこのポリシーを適応）	
						StringEquals		いいえ	条件：完全一致	
		AssumeRolePolicyDocument						はい	"このロールの信頼ポリシー
どれがこのロールを引き受けれるか"	
			Statement					はい		
				Action				はい	なんの操作をか	sts:AssumeRole：ロールの引き受け
				Effect				はい	許可・拒否の設定	許可
				Principal				はい		
					Service			はい	誰が引き受けるか	Cloudformationが
										
S3Bucket										この環境で使うストレージ
	DeletionPolicy							いいえ	"スタック削除時にリソースを残すか設定
デフォルトは削除"	Retain：残す
	Type							はい	リソースのタイプを設定	S3 Bucket
	Description							いいえ	メモ	
	Properties							はい	詳細設定	
		BucketName						いいえ	バケット名	
		VersioningConfiguration:						いいえ	バージョン管理	
			Status					はい	有効・無効	有効
		Tags						いいえ	タグ	
			Value					はい	値	
			Key					はい	タグキー	
										
ToolChainRole										EC2 インスタンス用の IAM ロール
	DeletionPolicy							いいえ	"スタック削除時にリソースを残すか設定
デフォルトは削除"	
	Type							はい	リソースのタイプを設定	Retain：残す
	Description							いいえ	メモ	IAM Role
	Properties							はい	詳細設定	
		Path						いいえ	"ロールへのパス
デフォルトは「/」"	「/」ルート
		ManagedPolicyArns						いいえ	ロールにアタッチする管理ポリシーのARN設定	"以下を設定
AdministratorAccess-AWSElasticBeanstalk
AmazonS3FullAccess
AWSCodeBuildAdminAccess
AWSCodeCommitFullAccess
AWSCodeDeployFullAccess
AWSCodePipeline_FullAccess
AWSCodeStarFullAccess
AWSLambda_FullAccess
CloudWatchEventsFullAccess
CloudWatchLogsFullAccess"
		RoleName						いいえ	"ロール名
デフォルトは自動生成のID"	
		Policies						いいえ	このロールのポリシーを設定	詳細は略
			PolicyName					はい		
			PolicyDocument					はい		
				Statement				はい		
					Action			はい		
					Resource			はい		
					Effect			はい		
			AssumeRolePolicyDocument					はい		
				Statement				はい		
					Action			はい		
					Effect			はい		
					Principal			はい		
						Service		はい		"下記が引き受け
codebuild.amazonaws.com
codedeploy.amazonaws.com
codepipeline.amazonaws.com
codestar.amazonaws.com
elasticbeanstalk.amazonaws.com
events.amazonaws.com
lambda.amazonaws.com"
			PermissionsBoundary					いいえ	"ロールの権限境界を設定
ポリシーのARNを設定"	
